// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Goods.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MyGame {

  /// <summary>Holder for reflection information generated from Goods.proto</summary>
  public static partial class GoodsReflection {

    #region Descriptor
    /// <summary>File descriptor for Goods.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GoodsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtHb29kcy5wcm90bxIGTXlHYW1lIm8KBUdvb2RzEgoKAmlkGAEgASgFEhAK",
            "CGl0ZW1OYW1lGAIgASgJEg4KBml0ZW1MVhgDIAEoBRIQCghVc2VNaW5MVhgE",
            "IAEoBRISCgppdGVtTWluTHZsGAUgASgFEhIKCml0ZW1NYXhMdmwYBiABKAVi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MyGame.Goods), global::MyGame.Goods.Parser, new[]{ "Id", "ItemName", "ItemLV", "UseMinLV", "ItemMinLvl", "ItemMaxLvl" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Goods : pb::IMessage<Goods> {
    private static readonly pb::MessageParser<Goods> _parser = new pb::MessageParser<Goods>(() => new Goods());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Goods> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyGame.GoodsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Goods() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Goods(Goods other) : this() {
      id_ = other.id_;
      itemName_ = other.itemName_;
      itemLV_ = other.itemLV_;
      useMinLV_ = other.useMinLV_;
      itemMinLvl_ = other.itemMinLvl_;
      itemMaxLvl_ = other.itemMaxLvl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Goods Clone() {
      return new Goods(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "itemName" field.</summary>
    public const int ItemNameFieldNumber = 2;
    private string itemName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemName {
      get { return itemName_; }
      set {
        itemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "itemLV" field.</summary>
    public const int ItemLVFieldNumber = 3;
    private int itemLV_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemLV {
      get { return itemLV_; }
      set {
        itemLV_ = value;
      }
    }

    /// <summary>Field number for the "UseMinLV" field.</summary>
    public const int UseMinLVFieldNumber = 4;
    private int useMinLV_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UseMinLV {
      get { return useMinLV_; }
      set {
        useMinLV_ = value;
      }
    }

    /// <summary>Field number for the "itemMinLvl" field.</summary>
    public const int ItemMinLvlFieldNumber = 5;
    private int itemMinLvl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemMinLvl {
      get { return itemMinLvl_; }
      set {
        itemMinLvl_ = value;
      }
    }

    /// <summary>Field number for the "itemMaxLvl" field.</summary>
    public const int ItemMaxLvlFieldNumber = 6;
    private int itemMaxLvl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemMaxLvl {
      get { return itemMaxLvl_; }
      set {
        itemMaxLvl_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Goods);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Goods other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ItemName != other.ItemName) return false;
      if (ItemLV != other.ItemLV) return false;
      if (UseMinLV != other.UseMinLV) return false;
      if (ItemMinLvl != other.ItemMinLvl) return false;
      if (ItemMaxLvl != other.ItemMaxLvl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ItemName.Length != 0) hash ^= ItemName.GetHashCode();
      if (ItemLV != 0) hash ^= ItemLV.GetHashCode();
      if (UseMinLV != 0) hash ^= UseMinLV.GetHashCode();
      if (ItemMinLvl != 0) hash ^= ItemMinLvl.GetHashCode();
      if (ItemMaxLvl != 0) hash ^= ItemMaxLvl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ItemName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ItemName);
      }
      if (ItemLV != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemLV);
      }
      if (UseMinLV != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UseMinLV);
      }
      if (ItemMinLvl != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ItemMinLvl);
      }
      if (ItemMaxLvl != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ItemMaxLvl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ItemName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemName);
      }
      if (ItemLV != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemLV);
      }
      if (UseMinLV != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UseMinLV);
      }
      if (ItemMinLvl != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemMinLvl);
      }
      if (ItemMaxLvl != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemMaxLvl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Goods other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ItemName.Length != 0) {
        ItemName = other.ItemName;
      }
      if (other.ItemLV != 0) {
        ItemLV = other.ItemLV;
      }
      if (other.UseMinLV != 0) {
        UseMinLV = other.UseMinLV;
      }
      if (other.ItemMinLvl != 0) {
        ItemMinLvl = other.ItemMinLvl;
      }
      if (other.ItemMaxLvl != 0) {
        ItemMaxLvl = other.ItemMaxLvl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            ItemName = input.ReadString();
            break;
          }
          case 24: {
            ItemLV = input.ReadInt32();
            break;
          }
          case 32: {
            UseMinLV = input.ReadInt32();
            break;
          }
          case 40: {
            ItemMinLvl = input.ReadInt32();
            break;
          }
          case 48: {
            ItemMaxLvl = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
