// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Skill.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MyGame {

  /// <summary>Holder for reflection information generated from Skill.proto</summary>
  public static partial class SkillReflection {

    #region Descriptor
    /// <summary>File descriptor for Skill.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SkillReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtTa2lsbC5wcm90bxIGTXlHYW1lInEKBVNraWxsEgoKAmlkGAEgASgFEg8K",
            "B3NraWxsSUQYAiABKAUSEQoJc2tpbGxJY29uGAMgASgFEhEKCXNraWxsTmFt",
            "ZRgEIAEoCRISCgpza2lsbExldmVsGAUgASgFEhEKCXNraWxsVHlwZRgGIAEo",
            "BWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MyGame.Skill), global::MyGame.Skill.Parser, new[]{ "Id", "SkillID", "SkillIcon", "SkillName", "SkillLevel", "SkillType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Skill : pb::IMessage<Skill> {
    private static readonly pb::MessageParser<Skill> _parser = new pb::MessageParser<Skill>(() => new Skill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Skill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyGame.SkillReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill(Skill other) : this() {
      id_ = other.id_;
      skillID_ = other.skillID_;
      skillIcon_ = other.skillIcon_;
      skillName_ = other.skillName_;
      skillLevel_ = other.skillLevel_;
      skillType_ = other.skillType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill Clone() {
      return new Skill(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "skillID" field.</summary>
    public const int SkillIDFieldNumber = 2;
    private int skillID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillID {
      get { return skillID_; }
      set {
        skillID_ = value;
      }
    }

    /// <summary>Field number for the "skillIcon" field.</summary>
    public const int SkillIconFieldNumber = 3;
    private int skillIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillIcon {
      get { return skillIcon_; }
      set {
        skillIcon_ = value;
      }
    }

    /// <summary>Field number for the "skillName" field.</summary>
    public const int SkillNameFieldNumber = 4;
    private string skillName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SkillName {
      get { return skillName_; }
      set {
        skillName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skillLevel" field.</summary>
    public const int SkillLevelFieldNumber = 5;
    private int skillLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillLevel {
      get { return skillLevel_; }
      set {
        skillLevel_ = value;
      }
    }

    /// <summary>Field number for the "skillType" field.</summary>
    public const int SkillTypeFieldNumber = 6;
    private int skillType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillType {
      get { return skillType_; }
      set {
        skillType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Skill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Skill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SkillID != other.SkillID) return false;
      if (SkillIcon != other.SkillIcon) return false;
      if (SkillName != other.SkillName) return false;
      if (SkillLevel != other.SkillLevel) return false;
      if (SkillType != other.SkillType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (SkillID != 0) hash ^= SkillID.GetHashCode();
      if (SkillIcon != 0) hash ^= SkillIcon.GetHashCode();
      if (SkillName.Length != 0) hash ^= SkillName.GetHashCode();
      if (SkillLevel != 0) hash ^= SkillLevel.GetHashCode();
      if (SkillType != 0) hash ^= SkillType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (SkillID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SkillID);
      }
      if (SkillIcon != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SkillIcon);
      }
      if (SkillName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SkillName);
      }
      if (SkillLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SkillLevel);
      }
      if (SkillType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SkillType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (SkillID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillID);
      }
      if (SkillIcon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillIcon);
      }
      if (SkillName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SkillName);
      }
      if (SkillLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillLevel);
      }
      if (SkillType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Skill other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.SkillID != 0) {
        SkillID = other.SkillID;
      }
      if (other.SkillIcon != 0) {
        SkillIcon = other.SkillIcon;
      }
      if (other.SkillName.Length != 0) {
        SkillName = other.SkillName;
      }
      if (other.SkillLevel != 0) {
        SkillLevel = other.SkillLevel;
      }
      if (other.SkillType != 0) {
        SkillType = other.SkillType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            SkillID = input.ReadInt32();
            break;
          }
          case 24: {
            SkillIcon = input.ReadInt32();
            break;
          }
          case 34: {
            SkillName = input.ReadString();
            break;
          }
          case 40: {
            SkillLevel = input.ReadInt32();
            break;
          }
          case 48: {
            SkillType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
