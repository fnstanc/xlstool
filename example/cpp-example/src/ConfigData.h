/*
* @file: %s
* @brief: This file is generated by xlstool, please don't edit it.
*/

#include <map>
#include <string>
#include "DataBlocks.pb.h"
#include "Skill.pb.h"
#include "Goods.pb.h"

namespace MyGame {
class ConfigData {
private:
    MyGame::DataBlocks data_root_;
    std::map<int, const MyGame::Skill *> Skill_items_;
    std::map<int, const MyGame::Goods *> Goods_items_;

public:
    const MyGame::Skill *Skill(int id) {
        auto iter = Skill_items_.find(id);
        if(iter != Skill_items_.end()) return iter->second;
        return nullptr;
    }

    const MyGame::Goods *Goods(int id) {
        auto iter = Goods_items_.find(id);
        if(iter != Goods_items_.end()) return iter->second;
        return nullptr;
    }

    bool Init(const std::string &bytes) {
        if (!data_root_.ParseFromString(bytes)) return false;
        for(int i = 0; i < data_root_.skill_items_size(); ++i) {
            const MyGame::Skill &item = data_root_.skill_items(i);
            Skill_items_[item.id()] = &item;
        }
        for(int i = 0; i < data_root_.goods_items_size(); ++i) {
            const MyGame::Goods &item = data_root_.goods_items(i);
            Goods_items_[item.id()] = &item;
        }
        return true;
    }
}; // ConfigData
} // MyGame
